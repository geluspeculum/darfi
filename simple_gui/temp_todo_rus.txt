


Поскольку писать много, решил сделать это на русском.

На повестке дня следующие задачи, которые необходимо выполнять в означенной 
последовательности:

- перейти к новому API запуска расчётов с постоянно существующими объектами
класса image_dir. Добавить настройки.

- перейти к новому API получения результатов расчётов, переделать таблицу
с результатами.

- Добавить вкладку с настройками результатов, выводимых в таблицу.

- сделать систему отлова кликов по картинкам для включения и выключения 
отдельных клеток.


Теперь обо всём подробнее.


Этап 1. Переход к новому API запуска расчётов и постоянным image_dir.

В начале (в момент запуска программы или в момент открытия новой workdir) 
необходимо создать image_dir'ы для всех подпапок из workdir, в которых
присутствуют файлы с названиями, указанными пользователем:

pic_an.image_dir(dir_path, nuclei_name, foci_name)

Слева в folder_widget должны отображаться только те папки, в которых
присутствуют файлы с соответствующими названиями.

Если файл с фокусами не задан (оставлен пустым), то image_dir'ы нужно
создать только с двумя аргументами:

pic_an.image_dir(dir_path, nuclei_name)

image_dir'ы должны быть пересозданы только в случае смены workdir или
в случае изменения названий файлов с картинками.

Сразу же в момент создания image_dir'ов должен быть создан рабочий 
cell_set для расчётов:

cell_set = pic_an.cell_set(name=name, cells=[])

cell_set должен быть пересоздан (пустым) при пересоздании image_dir'ов
или при изменении списка активных image_dir'ов (рядом с которыми стоят
галочки) или при смене настроек (кроме натроек таблицы - см. Этап 3).

###

При нажатии кнопки Сalculate должны быть выполнены следующие действия:

1. Для каждого aктивного image_dir'a должен быть запущен алгоритм поиска 
клеток:

for image_dir in image_dirs:
    image_dir.detect_cells(sensitivity, min_cell_size, load_foci)

Про sensitivity и min_cell_size см. в файле engine/README. Аргумент
load_foci должен получить значение True, если задано название файла
с фокусами и False, если не задано.


2. Из активных image_dir'ов должен быть создан cell_set со всеми клетками, для
которых будет происходить расчёт параметров.

cell_set = pic_an.cell_set(name=name, cells=[])

for image_dir in image_dirs:
    cell_set.extend(image_dir)


3. Если задан файл с фокусами, то должен быть запущен расчёт фокусов:

cell_set.calculate_foci(foci_det_sens, foci_fill_perc,\
        min_foci_radius, max_foci_radius, overlap, \
        return_circles, normalize, foci_rescale_values)

Про аргументы читай в файле engine/README. В меню настроек необходимо 
добавить недостающие.

4. Получить рассчитанные параметры и записать в выходной файл (На
этапе 2 в этом пункте будут изменения). Записть новые изображения.

cell_set.calculate_foci_parameters()
try:
    params = cell_set.get_parameters()
    cell_set.write_parameters(absoutfile)
except:
    pass

for image_dir in image_dirs:
    image_dir.write_all_pic_files(nuclei_color, foci_color)

Запись параметров надо взять под try, потому что она происходит с помощью
старых функций, которые вскоре будут заменены и работают корректно не во
всех случаях.

###

Кнопка Get scale from selection должна быть активна только в том случае,
если задано название файла с фокусами. При её нажатии должно происходить
то же, что и при нажатии Calculate до пункта 3. Вместо пунктов 3 и 4 необходимо
получить новые rescale_values

new_rescale_values = cell_set.get_foci_rescale_values()

и записать их в окне с настройками.



Этап 2. Переход к новому API получения результатов.

Вместо 

params = cell_set.get_parameters()

теперь необходимо использовать

params = get_parameters_dict()

Как следует из названия, теперь params это не лист, а словарь такого вида:

{'Rel foci area': {'MSE': 142.61000000000001, 'Mean': 1094.6400000000001},
'Abs foci number': {'MSE': 3.27, 'Mean': 24.640000000000001}, 'Rel foci 
number': {'MSE': 3.0899999999999999, 'Mean': 26.030000000000001}, 'Abs foci 
soid': {'MSE': 28269.490000000002, 'Mean': 174960.85000000001}, 'Cell number': 
{'Mean': 53}, 'Cell area': {'MSE': 811.77999999999997, 'Mean': 
7813.2700000000004}, 'Mean intensity im1': {'MSE': 4.5300000000000002, 
'Mean': 62.109999999999999}, 'Mean intensity im2': {'MSE': 3.9300000000000002,
'Mean': 38.130000000000003}, 'Rel foci soid': {'MSE': 33950.230000000003, 
'Mean': 184192.17999999999}, 'Foci intensity': {'MSE': 12.58, 'Mean': 
166.55000000000001}, 'Abs foci area': {'MSE': 133.83000000000001, 'Mean': 
1035.51}, 'Foci size': {'MSE': 11.01, 'Mean': 42.030000000000001}}

Ключами этого словаря являются названия столбцов, которые должны быть в таблице
в statusArea. Значениями являются также словари. В этих внутренних словарях
ключи - это название строк в таблице, а значения - собственно соответствующие
значения, которые необходимо записать в ячейки таблицы.

Последовательность названий столбцов и строк, в которой они выводятся в таблицу,
должна сохраняться при сохранении настроек (сессии). Желательно, чтобы можно
было менять последовательность столбцов или строк, перетаскивая их мышкой внутри
таблицы (это не срочно, можно сделать потом). Последовательность вывода столбцов
по умолчанию должна быть такой:

 1. Cell number
 2. Cell area
 3. Mean intensity im1
 4. Mean intensity im2
 5. Abs foci number
 6. Abs foci area
 7. Abs foci soid
 8. Rel foci number
 9. Rel foci area
10. Rel foci soid
11. Foci intensity
12. Foci size
13 и далее - все остальные ключи, которые попадутся в словаре

Последовательность вывода строк:

1. Mean
2. MSE
3 и далее - всё остальное

Если в params нет соответствующего ключа, то просто надо пропустить строку
или столбец с соответствующим названием. Если в params есть какие-то новые,
неизвестные ключи их надо записать в конце (последними столбцами или
строками).

Теперь при нажатии кнопки Calculate пункт 3 (см. Этап 1) должен выглядеть
так:

params = cell_set.get_parameters_dict()
try:
    cell_set.write_parameters(absoutfile)
except:
    pass

for image_dir in image_dirs:
    image_dir.write_all_pic_files(nuclei_color, foci_color)


Этап 3. Создание новой структуры настроек.

В настройках необходимо создать вкладочную структуру. Пока вкладок будет
четыре: Cell detection, Foci detection, Table, Images. В Сell detection пока
что надо оставить sensitivity и min_cell_size. В Foci detection оставляем
Foci lookup sensitivtiy, Foci area fill percent, Min foci radius, 
Max foci radius, Allowed Foci overlap, Normalize intensity, Foci rescale min,
Foci rescale max.

В Images оставляем Return circles, Nuclei color, Foci color.

Во вкладку Table надо поместить объединение названий всех имеющихся в params и 
загруженных из файла с настройками (сессией) параметров (ключей из params), 
напротив которых должны стоять чекбоксы. Включён - означает, что ничего 
дополнительно делать не надо. Выключен - означает, что если при создании таблицы
встретился параметр с таким названием, его нужно пропустить (в таблицу не 
записывать). Естественно, эти значения нужно сохранить в файл с настройками.
Обращаю внимание, что если в params появился новый ключ, которого до сих пор не
встречалось в настройки должен быть добавлен этот ключ.

По умолчанию должны быть выключены:

Mean intensity im1
Abs foci number
Abs foci area
Abs foci soid

Напротив каждого параметра необходимо сделать lineedit, который будет принимать
коэффициент для каждого из параметров (по умолчанию все коэффициенты должны
быть равны единицы). Перед выводом в таблицу все параметры необходимо домножить
на соответствующие им коэффициенты.


Этап 4. Добавление возможности включать и выключать отдельные клетки.

Задача заключается в том, чтобы при клике по одной из четырёх картинок,
которые выдаёт дарфи: colored_nuclei, seeds_foci, rescaled_foci или 
merged, считывались координаты места на картинке, где произошёл клик.
Далее эти координаты должны быть переведены в целые числа в системе координат
с масшатабом, соответствующим оригинальному размеру картинки.

Если, например, merged_pic.shape == (1024, 1360), то
x должен принадлежать [0; 1023]
y должен принадлежать [0; 1359]

Затем необходимо выполнить следующие действия с этими координатами для
image_dir'а, которому принадлежит открытая картинка:

if image_dir.touch_cell((x,y))
    params = cell_set.get_parameters_dict()
    image_dir.write_all_pic_files()

После этого необходимо обновить картинки в области просмотра и таблицу.






